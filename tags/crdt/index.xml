<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>crdt on But does she know so?</title>
    <link>/tags/crdt/</link>
    <description>Recent content in crdt on But does she know so?</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>sanyia.saidova@gmail.com (Sanyia Saidova)</managingEditor>
    <webMaster>sanyia.saidova@gmail.com (Sanyia Saidova)</webMaster>
    <copyright>Credit where credit is due - theme made by [sharadcodes](https://github.com/sharadcodes/hugo-theme-serial-programmer)</copyright>
    <lastBuildDate>Mon, 09 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/crdt/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The difference between operational transformations (OTs) and CRDTs</title>
      <link>/2022/05/09/the-difference-between-ots-and-crdts/</link>
      <pubDate>Mon, 09 May 2022 00:00:00 +0000</pubDate>
      <author>sanyia.saidova@gmail.com (Sanyia Saidova)</author>
      <guid>/2022/05/09/the-difference-between-ots-and-crdts/</guid>
      <description>How do you ensure systems remain consistent even when a partial network failure happens between them? Seems impossible, right?
A common approach would delegate a leader in a system, whereby all nodes would send changess to the leader first. The leader is then responsible for propogating the changes to all replicas. This approach is simple but can be slow, since the messages have to traverse a network. In the event of a network partition, your system may end up with a split brain with inconsistent data across the partition.</description>
    </item>
    
  </channel>
</rss>
