<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>transformations on But does she know so?</title>
    <link>/tags/transformations/</link>
    <description>Recent content in transformations on But does she know so?</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>sanyia.saidova@gmail.com (Sanyia Saidova)</managingEditor>
    <webMaster>sanyia.saidova@gmail.com (Sanyia Saidova)</webMaster>
    <copyright>Credit where credit is due - theme made by [sharadcodes](https://github.com/sharadcodes/hugo-theme-serial-programmer)</copyright>
    <lastBuildDate>Mon, 09 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/transformations/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The difference between operational transformations (OTs) and CRDTs</title>
      <link>/2022/05/09/the-difference-between-ots-and-crdts/</link>
      <pubDate>Mon, 09 May 2022 00:00:00 +0000</pubDate>
      <author>sanyia.saidova@gmail.com (Sanyia Saidova)</author>
      <guid>/2022/05/09/the-difference-between-ots-and-crdts/</guid>
      <description>How do you ensure systems remain consistent even when a partial network failure happens between them? Seems impossible, right? Commonly, systems would delegate a leader and changes would be sent to the leader first. The leader would propogate changes to their replicas, where you will need to rely on network latency in order to ensure the information is propogated to all replicas. In the event of a network partition, your system may end up with a split brain with inconsistent data across the partition.</description>
    </item>
    
  </channel>
</rss>
